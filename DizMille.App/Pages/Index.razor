@page "/"

<CascadingValue Value=@Players>
    <MudStack Class="context" Style="gap: 0px !important">
        <MudPaper Square Class="players">
            @foreach (var player in Players)
            {
                <PlayerCard Player=@player 
                            Selected=@RefreshUi />
            }
        </MudPaper>
        <MudPaper Square Color=@Color.Primary Class="pa-5">
            <MudStack>
                <MudButton Color=@Color.Primary
                           Variant="Variant.Filled"
                           @onclick=@(() => _dialogIsVisible = true) 
                           Style="width: 100%">
                    Add
                </MudButton>
                <MudStack Row>
                    <AddScoreButton Score=50 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=100 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=400 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=500 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=1000 ScoreChanged=@RefreshUi />
                </MudStack>
                <MudStack Row>
                    <AddScoreButton Score=-50 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=-100 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=-400 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=-500 ScoreChanged=@RefreshUi />
                    <AddScoreButton Score=-1000 ScoreChanged=@RefreshUi />
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudStack>

    <AddPlayer Created=@RefreshUi @bind-IsVisible=@_dialogIsVisible />
</CascadingValue>

<style>
    .context {
        height: 100vh;
        width: 100vw;
        overflow: hidden;
    }

    .players {
        display: flex;
        gap: 2px 10px;
        height: 100%;
        align-content: flex-start;
        width: 100%;
        flex-wrap: wrap;
        overflow: auto;
    }
</style>

@code{
    public List<Player> Players { get; set; } = new() { new() { Name = "Sacha", IsSelected = true } };
    public Player? SelectedPlayer { get; set; } = new();
    private bool _dialogIsVisible;

    private Task RefreshUi() => InvokeAsync(StateHasChanged);
}